name: Deploy AquaScene to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'
  FORCE_COLOR: 1

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build and Test
    runs-on: ${{ vars.RUNNER_TYPE || 'ubuntu-latest' }}
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit
          npm ls # Verify installation

      - name: Type check
        run: npm run type-check

      - name: Lint code
        run: npm run lint

      - name: Build application
        run: |
          echo "Building AquaScene with 10 amazing designs..."
          npm run build
          
      - name: Verify build output
        run: |
          echo "Verifying build output..."
          ls -la out/
          [ -f "out/index.html" ] || { echo "Error: index.html not found"; exit 1; }
          [ -d "out/_next" ] || { echo "Error: _next directory not found"; exit 1; }
          echo "Build verification successful!"

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ${{ vars.RUNNER_TYPE || 'ubuntu-latest' }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Verify deployment
        run: |
          echo "ðŸŽ‰ AquaScene deployment completed successfully!"
          echo "ðŸŒŠ Live site: ${{ steps.deployment.outputs.page_url }}"
          echo "ðŸŽ¨ Features 10 spectacular aquascaping designs"